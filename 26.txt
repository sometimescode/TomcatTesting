DATABASE DATABASE DATABASE DATABASE DATABASE DATABASE
DATABASE DATABASE DATABASE DATABASE DATABASE DATABASE
DATABASE DATABASE DATABASE DATABASE DATABASE DATABASE
DATABASE DATABASE DATABASE DATABASE DATABASE DATABASE
DATABASE DATABASE DATABASE DATABASE DATABASE DATABASE
[Still using the struts2 project from yesterday]
1) type "google.com" in url
client (your browser) sends a request to the server, server will process and
look for files needed to load the webpage and sends a copy back to client as response

you have a web server for frontend
and application server for backend
---
Tomcat is a container that has both web server and application servers
in your project, .java files are in the backend, the html and jsp are front end
all contained in Tomcat Apache Server
---
Controllers are your .java files. They process your requests.
in order to know which jsp to serve, look at example.xml
struts.xml is the main root -> namespace is a group of roots
---
View: jsp & html files
Controller: java files
middle of it is struts.xml

HelloWorld and Login .java files are your controllers.

Structure:
- Apache Container
-- View
-- Servlets (struts.xml and the .java files)

Example:
You are the USER typing in http://localhost:8080/demo-1.0-SNAPSHOT/example/HelloWorld.action
1) Goes to struts.xml and find "HelloWorld"
 struts will go to example.xml (since it's included) and look for <action name="HelloWorld" ..., which has class="project.example.HelloWorld" which points to the controller
2) Controller then sends back the the <result> of HelloWorld.jsp

Another:
Login
struts.xml -> find appropriate class -> go to Login.java -> return Login.jsp
which displays on the view and is then seen by the user
---
Simple Website (Activity 1)
Menu -> Introduction to Website
---
User -> struts -> HelloWorld and Login
In this example, we have to add "/example/HelloWorld" to navigate to HelloWorld because 
"/example" is the namespace.
---
(Activity 2)
Create another root on structs.xml using <action> and <result> tags.
Add new About.jsp and About.java in their respective directories with the others 

Then we updated index.html to index.jsp, and then updated the <welcome-file> tag in web.xml to reflect the change

Add the following above index.jsp to use struct tags
<%@ page contentType="text/html; charset=UTF-8" %>
<%@ taglib prefix="s" uri="/struts-tags" %>
